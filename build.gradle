plugins {
    id 'org.liquibase.gradle' version '2.2.0'
}

repositories {
    mavenCentral()
}

configurations {
    liquibaseRuntime
}

dependencies {
    liquibaseRuntime 'org.liquibase:liquibase-core:4.20.0'
    liquibaseRuntime 'org.postgresql:postgresql:42.6.0'
    liquibaseRuntime 'info.picocli:picocli:4.7.5'
    liquibaseRuntime 'ch.qos.logback:logback-classic:1.4.14'
    liquibaseRuntime 'org.yaml:snakeyaml:2.0'
}

liquibase {
    activities {
        main {
            arguments = [
                'changeLogFile': 'src/main/resources/db/changelog/changelog-master.xml',
                'url': project.hasProperty('db.url') ? project.property('db.url') : 
                    "jdbc:postgresql://${System.getenv('DB_HOST') ?: 'localhost'}:${System.getenv('DB_PORT') ?: '5432'}/${System.getenv('DB_NAME') ?: 'postgres'}",
                'username': project.hasProperty('db.user') ? project.property('db.user') : System.getenv('DB_USER'),
                'password': project.hasProperty('db.password') ? project.property('db.password') : System.getenv('DB_PASSWORD'),
                'defaultSchemaName': 'bootcamp'
            ]
        }
    }
    runList = 'main'
}

task createChangeset {
    description 'Creates a new changeset file with timestamp'
    group = 'Liquibase'

    doLast {
        if (!project.hasProperty('name')) {
            throw new GradleException("Please provide a name for the changeset: -Pname=\"your changeset name\"")
        }

        def timestamp = new Date().format('yyyyMMddHHmmssSSS')
        def fileName = timestamp + '_' + project.property('name').toString().toLowerCase().replaceAll(' ', '_') + '.sql'
        def author = System.getProperty('user.name')
        def changesetPath = 'src/main/resources/db/changelog/changes'
        def file = new File("${changesetPath}/${fileName}")

        file.parentFile.mkdirs()
        file.text = """-- Changeset ${author}:${timestamp}
-- Comment: ${project.property('name')}

"""

        def masterFile = new File('src/main/resources/db/changelog/changelog-master.xml')
        def masterContent = masterFile.text
        def insertPoint = masterContent.lastIndexOf('</databaseChangeLog>')
        
        if (insertPoint > 0) {
            def newChangeset = """    <changeSet id="${timestamp}" author="${author}">
        <sqlFile path="changes/${fileName}" relativeToChangelogFile="true"/>
    </changeSet>

</databaseChangeLog>"""
            
            masterContent = masterContent.substring(0, insertPoint) + newChangeset
            masterFile.text = masterContent
        }

        println "Created new changeset: ${fileName}"
    }
}

// Verifica si la tarea ya existe antes de crearla
if (!tasks.findByName('dbDoc')) {
    task dbDoc(type: JavaExec) {
        classpath configurations.liquibaseRuntime
        main = "liquibase.integration.commandline.Main"
        args = ["--changeLogFile=src/main/resources/db/changelog/changelog-master.xml",
                "--url=${project.hasProperty('db.url') ? project.property('db.url') : 'jdbc:postgresql://localhost:5432/postgres'}",
                "--username=${project.hasProperty('db.user') ? project.property('db.user') : 'postgres'}",
                "--password=${project.hasProperty('db.password') ? project.property('db.password') : 'postgres'}",
                "dbDoc",
                "build/database-docs"]
    }
}

// Verifica si la tarea ya existe antes de crearla
if (!tasks.findByName('validateChangelog')) {
    task validateChangelog(type: JavaExec) {
        classpath configurations.liquibaseRuntime
        main = "liquibase.integration.commandline.Main"
        args = ["--changeLogFile=src/main/resources/db/changelog/changelog-master.xml",
                "--url=${project.hasProperty('db.url') ? project.property('db.url') : 'jdbc:postgresql://localhost:5432/postgres'}",
                "--username=${project.hasProperty('db.user') ? project.property('db.user') : 'postgres'}",
                "--password=${project.hasProperty('db.password') ? project.property('db.password') : 'postgres'}",
                "validate"]
    }
}

